import{A as P,C as R,D as u,n as z,q as a,r as g,s as c,u as A,v as d,z as D}from"./chunk-FMBXTAWF.js";import{$ as h,ea as p}from"./chunk-75LTUFHW.js";import{a as s,b as f,c as m}from"./chunk-DVOCWXDE.js";var j=(()=>{class o{constructor(t){this.firestore=t}createAlertParameterization(t){let e=t.uid||`alert_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,r=c(a(this.firestore,"alert-parameterizations"),e),i=f(s({},t),{uid:e});return P(r,i).then(()=>i)}updateAlertParameterization(t,e){let r=c(a(this.firestore,"alert-parameterizations"),t),n=e,{uid:i}=n,l=m(n,["uid"]);return R(r,l).then(()=>e)}deleteAlertParameterization(t){let e=c(a(this.firestore,"alert-parameterizations"),t);return g(e)}getAlertParameterization(t){let e=c(a(this.firestore,"alert-parameterizations"),t);return A(e).then(r=>{if(!r.exists())return null;let i=r.data();return s({id:r.id},i)})}listAlertParameterizations(){let t=a(this.firestore,"alert-parameterizations");return d(t).then(e=>e.docs.map(r=>s({id:r.id},r.data())))}getAlertParameterizationByValue(t,e){let r=a(this.firestore,"alert-parameterizations"),i=D(r,u("value","==",t),u("digits","==",e));return d(i).then(l=>{if(l.empty)return null;let n=l.docs[0];return s({id:n.id},n.data())})}static{this.\u0275fac=function(e){return new(e||o)(p(z))}}static{this.\u0275prov=h({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})();export{j as a};
